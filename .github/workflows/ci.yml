name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  cache-and-install:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install deps
        run: pnpm install

  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    needs: cache-and-install
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install deps
        run: pnpm install --frozen-lockfile

      - name: 🔬 Lint
        run: pnpm run lint

  typescript:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    needs: cache-and-install
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install deps
        run: pnpm install --frozen-lockfile

      - name: 🔎 TypeScript Check
        run: pnpm run ts

  unit-tests:
    name: ⚡ Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, typescript]
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install deps
        run: pnpm install --frozen-lockfile

      - name: ⚡ Run Unit Tests
        run: pnpm run test:unit
        env:
          VITE_APP_ENVIRONMENT: 'test'

  e2e-tests:
    name: ⚡ Run E2E Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🤝 Copy test env vars
        run: cp .env.example .env

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install deps
        run: pnpm install --frozen-lockfile

      - name: 🛠 Install Playwright Browsers
        run: pnpm run test:e2e:install

      - name: 🏗 Build
        run: pnpm run build

      - name: 🎭 Playwright tests
        run: npx playwright test

      - name: 📊 Upload report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [lint, typescript, unit-tests, e2e-tests]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📥 Install deps
        run: pnpm install --frozen-lockfile

      - name: 🚚 Build Project
        run: pnpm run build

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
